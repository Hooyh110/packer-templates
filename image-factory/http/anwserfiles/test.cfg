#version=RHEL7
# Use graphical/text install  #图形化/字符安装界面
text
#graphical

#使用系统上的第一个光驱执行安装,光盘安装配置
cdrom
#要实际运行安装，必须指定 cdrom、harddrive、hmc、nfs、liveimg 或 url 之一
#url --url=file:///run/install/repo/

#最小化安装,及其他预装应用
%packages
@^minimal
kexec-tools
bash-completion

curl
wget
tar
unzip
ipmitool

make
gcc

%end

#使用美式键盘
keyboard --xlayouts='us'
#系统默认语言设置，即环境变量$LANG，--addsupport添加对附加语言的支持
lang en_US.UTF-8 --addsupport=zh_CN

#设置主机名
network  --hostname=santiagod.ks
#IP设置，需指明device，否则会取消后续所有network指令
#network --bootproto=static --ip=192.168.116.10 --netmask=255.255.255.0 --gateway=192.168.116.1 --nameserver=8.8.8.8,114.114.114.114 --device=ens192


#enable时，系统第一次引导时启动 Initial Setup，设置语言、鼠标、键盘、root 密码、安全级别、时区以及默认网络配置。默认为disable
firstboot --disable

#使用这个选项在没有用户互动的情况下接受最终用户许可证协议(End User License Agreement,EULA)。指定这个选项可防止 Initial Setup 在完成安装并第一次重启系统后提示您接受该许可证
eula --agreed

#系统时区上海，使用UTC时间，默认开启时间同步
timezone Asia/Shanghai --isUtc

# Root password: Admin123!
rootpw --iscrypted $6$uMfDCfQnqrZgk/yL$F.DkU0TF2k14QNqLUv.cc8X16ZUXGe/8Q./rspkY1tKnmOywrgcBx.eEA7u9oWT/u2T6jzNM410EL1Uy5oPk9/

#禁用selinux与firewalld
firewall --disabled
selinux  --disabled

#安装完成后，重启系统
#--eject - 在重新启动前尝试弹出可引导介质（DVD、USB 或其他介质）
reboot --eject

%include /tmp/part-include

#禁用kdump
%addon com_redhat_kdump --disable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end


#------------------------------------------------------------------------------------------------------------------------------------------------------
%pre

###设置系统盘
#找到大于10G的盘vgname=santiagod
disk=$(while read line;do awk 'BEGIN{} {if ($3 >= 10485760 && $2 == 0) print $4} END{}';done < /proc/partitions|grep -Ew 'sda|vda|hda')
#disk=sda,vda,hda

cat > /tmp/part-include << EOF_PART#指定只使用第一块逻辑磁盘#ingoredisk --only-use=sda,vda#格盘
clearpart --all --initlabel

#基于 UEFI 的 AMD64、Intel 64 和 64 位 ARM 需要 200 MiB EFI 系统分区。推荐的最小值是 200 MiB，默认大小为 600 MiB，最大为 600 MiB。BIOS 系统不需要 EFI 系统分区
part /boot/efi --fstype="efi" --ondisk=$disk --size=600 --fsoptions="umask=0077,shortname=winnt"
#将sda创建为ID:311的物理卷，最小10G，若磁盘大于10G，也全部做成物理卷
#--grow 自增长
part pv.311 --fstype="lvmpv" --ondisk=$disk --size=10240 --grow
#boot分区，建议大小1G
part /boot --fstype="xfs" --ondisk=$disk --size=1024
#将pv.311加入卷组，默认pe大小4M
volgroup $vgname --pesize=4096 pv.311
#逻辑卷-交换空间，视磁盘大小而定，为安装时的系统盘大小10%
logvol swap --fstype="swap" --recommended --name=swap --vgname=$vgname
#逻辑卷-根分区，虽然 5 GiB 根文件系统允许您最小安装，但建议至少分配 10 GiB，以便可以尽可能安装您想要的软件包组
logvol / --fstype="xfs" --size=10240 --grow --name=root --vgname=$vgname

EOF_PART
#-------------------------------------------------------------------------------------------------------------

%end



%post
#!/bin/bash

###打标签
echo -e "\033[1;31mSantiagod \033[1;34mlinux \033[1;31m7\033[1;34m.9\033[0m\n" > /etc/issue
#--------------------------------------------------------------------------------------------

###内核调优
#kernel.sem 表示设置的信号量
#fs.aio-max-nr 表示系统范围异步 I/O 请求的最大并发数
#fs.file-max 表示一个进程可以打开的文件句柄的最大数量
#net.ipv4.ip_local_port_range 表示专用服务器模式下与用户进程通信时分配给用户的端口区间
#kernel.pid_max 表示进程ID数量上限
#验证：sysctl 模块名，如【sysctl kernel.sem】
cat > /etc/sysctl.d/Santiagod-98-sysctl.conf <<-\EOF_SYSCTL
kernel.sem = 4010 641600 4010 1024
fs.aio-max-nr = 1048576
fs.file-max = 6815744
net.ipv4.ip_local_port_range = 9000 65501
net.core.rmem_default = 1048576
net.core.rmem_max = 1048576
net.core.wmem_default = 1048576
net.core.wmem_max = 1048576
vm.swappiness = 0
vm.dirty_background_bytes=102400000
vm.dirty_bytes=409600000
vm.min_free_kbytes=512000
kernel.pid_max = 4194303
EOF_SYSCTL

#限制用户的最大线程数[nproc]和最大打开文件数[nofile]，*代表所有用户，131072代表最大可接受的数
#有soft，hard和-，soft指的是当前系统生效的设置值，软限制也可以理解为警告值。hard表名系统中所能设定的最大值。
#soft的限制不能比hard限制高，用-表名同时设置了soft和hard的值。
#验证：ulimit -a
cat > /etc/security/limits.d/Santiagod-20-nofile.conf <<-\EOF_LIMITS
*       soft    nproc   131072
*       hard    nproc   131072
*       soft    nofile  131072
*       hard    nofile  131072
EOF_LIMITS
#----------------------------------------------------------------------------------------------------------

###Serial串口设置及网卡命名规则eth0模式
if [ $(systemd-detect-virt) = none ]; then
    dnf module disable virt -qy
else
    ### linux-firmware is use-less in VM
    dnf remove -y linux-firmware

    ### Enable serial console && use ethN names in VMs
    CONF=/etc/default/grub
    grep GRUB_TERMINAL $CONF | grep -q serial || \
        sed -i '/^GRUB_TERMINAL/s/_TERMINAL.*$/_TERMINAL="serial console"/' $CONF
    grep GRUB_SERIAL_C $CONF | grep -q serial || \
        sed -i '/^GRUB_TERMINAL/aGRUB_SERIAL_COMMAND="serial --speed=115200"' $CONF
    grep GRUB_CMDLINE_ $CONF | grep -q ttyS0  || \
        sed -i '/^GRUB_CMDLINE_/s/"$/ net.ifnames=0 biosdevname=0 console=ttyS0,115200n8"/' $CONF
    sed -i -e '/CMDLINE/s/rhgb/spectre_v2=off/' -e '/CMDLINE/s/quiet/nopti/' $CONF
fi

#grub2-mkconfig -o $(find /boot -name grub.cfg)
#----------------------------------------------------------------------------------------

###修改系统标签
#验证：more /etc/*release
#rm -rf /etc/system-release
mv -f /etc/centos-release /etc/system-release
rm -rf /etc/{redhat,centos}-release
sed -i '/URL/d' /etc/os-release

sed -i 's/CentOS/Santiagod/g' /etc/{system,os}-release
sed -i -e 's/centos/santiagod/g' -e 's/CENTOS/SANTIAGOD/g' /etc/{system,os}-release
grub2-mkconfig -o /boot/grub2/grub.cfg
#----------------------------------------------------------------------------------------

### rc.local 删记录，设IP
cat <<'EOF' >> /etc/rc.d/rc.local
#START#
find /root -type f -name \*-ks.cfg -exec rm -f {} \;
find /tmp  -type f -name ks-\*     -exec rm -f {} \;
find /var/log \( -name anaconda -o -name installer.log \) -exec rm -rf {} \;

### 预设IP
nmcli -g UUID con | xargs -I{} nmcli con down {}
nmcli -g UUID con | xargs -I{} nmcli con del {}
IF2=$(nmcli -g DEVICE dev | grep -v lo | head -1)
if [ -n "$IF2" ]; then
    nmcli con add type ethernet ifname $IF2 con-name $IF2
    nmcli con mod $IF2 ipv4.method manual ipv4.addr 192.168.202.70/24
    nmcli con mod $IF2 ipv4.gateway 192.168.202.1 autoconnect yes
    nmcli con reload
    nmcli con up $IF2
fi

chmod -x /etc/rc.d/rc.local
sed -i '/^#START#$/,/^#END#$/d' /etc/rc.d/rc.local
#END#
EOF
chmod +x /etc/rc.d/rc.local
#-----------------------------------------------------------------------------------------

%end